Менеджеры:
ALTER TABLE managers ADD COLUMN _nameForArmour TEXT;

    BEST 0-генерация брони от order.
	+1-менеджеры -добавить группу чисто для менеджеров. Сейчас запрос:
		model->setQuery("SELECT _code FROM managers WHERE _folder=0 and _mark=0",Settings::S()->_db);
	изменить на: "SELECT _code FROM managers WHERE _folder=0 and _mark=0 and _parent='OnlyManagers'"
	+2-изменить при создание время на : "select datetime('now','localtime');" Сейчас отстает на 3 часа.
	3- нашел авто, нужно добавить успешный поиск и отчет.
	4- добавить phone по умолчанию.  
	5- trade
	  "CREATE TABLE IF NOT EXISTS trade( "
	  " _id integer PRIMARY KEY NOT NULL,"
	  " _date TEXT,"
	  " _status TEXT check( _folder='Учитывать в отчете по поиску' or _folder='Не учитывать в отчете') NOT NULL DEFAULT 'Учитывать в отчете по поиску'"
	  " _orders INTEGER REFERENCES orders(_id ) ON UPDATE CASCADE,"
	 " _dealer text REFERENCES dealers(_code) ON UPDATE CASCADE NOT NULL "
	 " _comment TEXT, "
	 " _color_option_trade TEXT," 
	 " giveAwayCar TEXT,"
	 " giveAwayVin TEXT,"
	 " giveAwayDate TEXT,"
	 " getCar TEXT,"
	 " getVin TEXT,"
	 " getDate TEXT);"
	6-QDateTimeEdit  QDateTimeEdit can be configured to allow a QCalendarWidget to be used to select dates. This is enabled by setting the calendarPopup property. 
	  
	  QLabelPresentation
	  
	  
	7-в order нужно добавить акции. Отдельная таблица:
		"CREATE TABLE IF NOT EXISTS order_actions( "
			" _name TEXT PRIMARY KEY NOT NULL,"
			" _mark integer check( _mark=1 or _mark=0) DEFAULT 0);"
	 <<"INSERT OR IGNORE INTO order_actions(_name) VALUES "
       " ('Без акций'), " 
       " ('Наличка трейдин'), " 
       " ('Кредит трейдин');" 
	в ордер вставить:
	 " order_action TEXT REFERENCES order_actions(_name) ON UPDATE CASCADE DEFAULT 'Без акций'"
	8-по умолчанию заполнить cars цветами:
		"INSERT OR IGNORE INTO colors(_code,_name) VALUES "
		" ('369', 'Белый лед [369]'), "
		" ('676', 'Черная жемчужина [676]'), "
		" ('D17', 'Темный каштан [D17]'), "
		" ('D69', 'Серая платина [D69]'), "
		" ('DNP', 'Хаки [DNP]'), "
		" ('ENZ', 'Оранжевая аризона [ENZ]'), "
		" ('CNM', 'Коричневый [CNM]'), "
		" ('KNM', 'Серый базальт [KNM]'), "
		" ('RPG', 'Синий сапфир [RPG]'), "
		" ('RPL', 'Лазурно-синий [RPL]'), "
		" ('XTM', 'Коричневый каштан с черной крышей [XTM]'), "
		" ('XTN', 'Коричневый каштан с крышей цвета слоновая кость [XTN]'), "
		" ('XTP', 'Черная жемчужина с крышей цвета слоновая кость [XTP]'), "
		" ('XZY', 'Слоновая кость с крышей коричневый каштан [XZY]'), "
		" ('KAD', 'Темная сталь [KAD]'), "
		" ('NPI', 'Красный [NPI]'), "
		" ('XTK', 'Белый лед с черной крышей [XTK]'), "
		" ('XTL', 'Темная сталь с черной крышей [XTL]'), "
		" ('XTR', 'Серая платина с черной крышей [XTR]'), "
		" ('XVQ', 'Красный с черной крышей [XVQ]'), "
		" ('YNL', 'Красный с крышей цвета слоновой кости [YNL]'), "
		" ('RPM', 'Синяя лазурь [RPM]'), "
		" ('XNP', 'Оранжевая Аризона с крышей цвета слоновой кости [XNP]'), "
		" ('XTS', 'Оранжевая Аризона с черной крышей [XTS]'), "
		" ('XTT', 'Синяя лазурь с черной крышей [XTT]'), "
		" ('ENZ', 'Оранжевая Аризона [ENZ]'), "
		" ('XNV', 'Синяя лазурь с крышей цвета слоновой кости [XNV]'), "
		" ('XTQ', 'Зеленый хаки с черной крышей [XTQ]'), "
		" ('B76', 'Красный [B76]'), "
		" ('F90', 'Золотисто-зеленый Оникс [F90]'), "
		" ('D42', 'Синий океан [D42]'), "
		" ('KNA', 'Серая комета [KNA]'); "
		 
		 
    9-order presentation к чертям летит. Ставится последняя. дописать: " WHERE orders._id=NEW._id " в конец
	<<" CREATE TRIGGER IF NOT EXISTS orders_presentation_inser AFTER INSERT ON orders "
      " BEGIN  "
      "     UPDATE orders SET _presentation=NEW._manager||' for '||NEW._client||' in '||NEW._workList  WHERE orders._id=NEW._id ; "
      " END; "
    <<" CREATE TRIGGER IF NOT EXISTS orders_presentation_update AFTER UPDATE ON orders "
      " BEGIN  "
      "     UPDATE orders SET _presentation=NEW._manager||' for '||NEW._client||' in '||NEW._workList  WHERE orders._id=NEW._id ; "
      " END; "
	  
	10- нужно выводить хотя бы отсортированный лист цветов. 
	https://www.linux.org.ru/forum/development/11689249
	попробовать настроить QSortFilterProxyModel для сортировки цветов. Цвет красный под индексом 10 идет в начале и цвет красный под индексом 44 идет в конце. Хочу отсортировать коды по имени, чтобы красный,красный,красный с черным, красный с базальтом шли рядом друг за другом.
	
	11 отчет:
	
	"CREATE TABLE IF NOT EXISTS trade( "
          " _id integer PRIMARY KEY NOT NULL,"
          " _date TEXT,"
          " _status TEXT check( _status='Учитывать в отчете по поиску' or _status='Не учитывать в отчете') DEFAULT 'Учитывать в отчете по поиску',"
          " _orders INTEGER REFERENCES orders(_id ) ON UPDATE CASCADE,"
         " _dealer text REFERENCES dealers(_code) ON UPDATE CASCADE, "
         " _comment TEXT, "
         " _color_option_trade TEXT,"
         " _giveAwayCar TEXT,"
         " _giveAwayVin TEXT,"
         " _giveAwayDate TEXT,"
         " _getCar TEXT,"
         " _getVin TEXT,"
         " _getDate TEXT);"
	Для отчета нужны колонки:
		1-Строка//Просто нумерация ++i
		2-Клиент купил//destinyTrade._boughtCliend
		3-Менеджер продал//destinyTrade._soldManager
		4-Дата реализации//destinyTrade._dateSold	
		5-Менеджеру искал//managers._nameForArmour 
		6-Клиент искал//orders._client
		7-РЛ//orders._workList
		8-Дата производства//trade._getDate
		9-Модель полученная//trade._getCar
		10-Вин полученного//trade._getVin	
		11-Модель отданная//trade._giveAwayCar		
		12-Вин отданного//trade._giveAwayVin		
		13-ЦветаОпцииОбмена	//trade._color_option_trade	
		14-Дата производства отданного авто//trade._giveAwayDate	
	SELECT
		destinyTrade._boughtCliend as _boughtCliend,
		destinyTrade._soldManager as _soldManager,
		destinyTrade._dateSold as _dateSold,
		managers._nameForArmour as _nameForArmour,
		orders._client as findForClient,
		orders._workList as findForWorkList,
		trade._getDate as _getDate,
		trade._getCar as _getCar,
		trade._getVin as _getVin,
		trade._giveAwayCar as _giveAwayCar,
		trade._giveAwayVin as _giveAwayVin,
		trade._giveAwayDate as _giveAwayDate,
		trade._color_option_trade as _color_option_trade
	FROM trade
	LEFT JOIN orders ON
	  orders._id=trade._orders
	LEFT JOIN managers ON
		managers._code=orders._manager
	LEFT JOIN destinyTrade ON
		destinyTrade._parentTrade=trade._id
	WHERE 
		trade._date >= '2018-08-31' and trade._date < '2018-10-01'
		and trade._status='Учитывать в отчете по поиску';
	
	Для отчета нужна таблица: destinyTrade
	  "CREATE TABLE IF NOT EXISTS destinyTrade( "
	  " _parentTrade INTEGER PRIMARY KEY REFERENCES trade(_id) ON UPDATE CASCADE,"
	  " _boughtCliend TEXT,"
	  " _soldManager TEXT REFERENCES managers(_code) ON UPDATE CASCADE, "
	  " _dateSold TEXT,"
	  " _comment TEXT);"
	  
	в идеале с автоматическим обновлением и добавлением:
	  <<" CREATE TRIGGER IF NOT EXISTS create_destinyTrade_trigger AFTER INSERT ON trade "
      " BEGIN  "
      "     INSERT INTO destinyTrade(_parentTrade) VALUES (NEW._id);"
      " END; "
	
	  " CREATE TRIGGER IF NOT EXISTS update_destinyTrade_trigger AFTER UPDATE ON trade "
      " BEGIN  "
      "     UPDATE destinyTrade SET _parentTrade=NEW._id WHERE destinyTrade._parentTrade=OLD._id; "
      " END; "
	  
	  
 sqls<<"CREATE TABLE IF NOT EXISTS cars( "
          " _id integer PRIMARY KEY NOT NULL,"
          " _code TEXT NOT NULL, "
          " _name TEXT NOT NULL, "
          " _parentCode TEXT REFERENCES cars(_id) ON UPDATE CASCADE,"
          " _folder integer check( _folder=1 or _folder=0) NOT NULL"
          " ); "
       <<"CREATE UNIQUE INDEX IF NOT EXISTS cars_index ON cars(_code,_name,_parentCode);"
       <<"INSERT OR IGNORE INTO cars(_id,_code,_name,_parentCode,_folder) VALUES "
         "(0,'root','root',0,1);"
      <<"INSERT OR IGNORE INTO cars(_id,_code,_name,_parentCode,_folder) VALUES "
        "(1,'Empty model root','Empty model root',0,0);"
       <<"CREATE TABLE IF NOT EXISTS colors( "
         "   _id integer PRIMARY KEY NOT NULL, "
         "  _code text NOT NULL, "
         " _name text NOT NULL "
         "); "
      <<"CREATE UNIQUE INDEX IF NOT EXISTS color_index ON colors(_code,_name);"
     <<"CREATE TABLE IF NOT EXISTS cars_colors(  "
       " _car integer REFERENCES cars(_id)  ON UPDATE CASCADE NOT NULL,  "
       " _color integer REFERENCES colors(_id)  ON UPDATE CASCADE NOT NULL "
       " ); "
    <<"CREATE UNIQUE INDEX IF NOT EXISTS car_color_index ON cars_colors(_car,_color);"
    <<" CREATE TABLE IF NOT EXISTS dealers( "
      " _code TEXT PRIMARY KEY NOT NULL, "
      " _name TEXT, "
      " _comment TEXT, "
      " _activePhone TEXT, "
      " _distryPhone TEXT "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS full_call( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _comment TEXT, "
      " _source TEXT, "
      " _parent text REFERENCES dealers(_code) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS email( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _mail TEXT, "
      " _comment TEXT, "
      " _parent text REFERENCES dealers(_code) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS managers( "
      " _code TEXT PRIMARY KEY NOT NULL, "
      " _fullName TEXT, "
      " _mark integer CHECK (_mark=0 or _mark=1) DEFAULT 0, "
      " _parent TEXT REFERENCES managers(_code) ON UPDATE CASCADE NOT NULL, "
      " _folder integer check( _folder=1 or _folder=0) NOT NULL DEFAULT 0"
      " ); "
     <<"INSERT OR IGNORE INTO managers(_code,_fullName,_mark,_parent,_folder) VALUES "
       " ('root','root','0','root',1);"
    <<"INSERT OR IGNORE INTO managers(_code,_fullName,_mark,_parent,_folder) VALUES "
      " ('default','default manager','0','root',0);"
    <<" CREATE TABLE IF NOT EXISTS orders( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _manager TEXT REFERENCES managers(_code) ON UPDATE CASCADE NOT NULL, "
      " _client TEXT, "
      " _workList TEXT, "
      " _model integer REFERENCES cars(_id) ON UPDATE CASCADE NOT NULL, "
      " _mark integer CHECK (_mark=0 or _mark=1), "
      " _status text CHECK(_status='' or _status='Search!!!' or _status='Cancel' or _status='Found' or _status='Wait'),"
      " _presentation text "
      " ); "
    <<"INSERT OR IGNORE INTO orders(_id,_manager,_client,_model,_workList) VALUES "
      " (0,'default','default orders',1,'default orders');"
    <<" CREATE TABLE IF NOT EXISTS orders_color( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _color INTEGER REFERENCES colors(_id) ON UPDATE CASCADE NOT NULL, "
      " _parent integer REFERENCES orders(_id) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS orders_option( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _option TEXT NOT NULL,"
      " _parent integer REFERENCES orders(_id) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS order_timeline( "
      "_id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _comment TEXT,"
      " _parent integer REFERENCES orders(_id) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TRIGGER IF NOT EXISTS orders_presentation_inser AFTER INSERT ON orders "
      " BEGIN  "
      "     UPDATE orders SET _presentation=NEW._manager||' for '||NEW._client||' in '||NEW._workList; "
      " END; "
    <<" CREATE TRIGGER IF NOT EXISTS orders_presentation_update AFTER UPDATE ON orders "
      " BEGIN  "
      "     UPDATE orders SET _presentation=NEW._manager||' for '||NEW._client||' in '||NEW._workList; "
      " END; "
    <<" CREATE TABLE IF NOT EXISTS phone( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _orders INTEGER REFERENCES orders(_id ) ON UPDATE CASCADE, "
      " _date TEXT,"
      " _f_status TEXT CHECK(_f_status in ('Search!!!','Cancel','Found','Wait') ) );"
    <<" CREATE TABLE IF NOT EXISTS calls( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _phone INTEGER REFERENCES phone(_id) ON UPDATE CASCADE NOT NULL, "
      " _vinCar TEXT, "
      " _code_dealer TEXT, "
      " _activePhone TEXT, "
      " _blockCar TEXT, "
      " _dateCar TEXT, "
      " _dealerNameAndOpen TEXT, "
      " _dealerLastCall TEXT, "
      " _modelCar TEXT, "
      " _optionCar TEXT, "
      " _colorCar TEXT, "
      " _dateTalk TEXT, "
      " _colorTalk TEXT CHECK(_colorTalk in ('','Красный','Зеленый','Синий','Коричневый','Желтый','Фиолетовый') ), "
      " _commentTalk TEXT "
      " ); "
    ;