Менеджеры:
ALTER TABLE managers ADD COLUMN _nameForArmour TEXT;

    BEST 0-генерация брони от order.
	+1-менеджеры -добавить группу чисто для менеджеров. Сейчас запрос:
		model->setQuery("SELECT _code FROM managers WHERE _folder=0 and _mark=0",Settings::S()->_db);
	изменить на: "SELECT _code FROM managers WHERE _folder=0 and _mark=0 and _parent='OnlyManagers'"
	+2-изменить при создание время на : "select datetime('now','localtime');" Сейчас отстает на 3 часа.
	3- нашел авто, нужно добавить успешный поиск и отчет.
	4- добавить phone по умолчанию.  
	5- trade
	  "CREATE TABLE IF NOT EXISTS trade( "
	  " _id integer PRIMARY KEY NOT NULL,"
	  " _date TEXT,"
	  " _status TEXT check( _folder='Учитывать в отчете по поиску' or _folder='Не учитывать в отчете') NOT NULL DEFAULT 'Учитывать в отчете по поиску'"
	  " _orders INTEGER REFERENCES orders(_id ) ON UPDATE CASCADE,"
	 " _dealer text REFERENCES dealers(_code) ON UPDATE CASCADE NOT NULL "
	 " _comment TEXT, "
	 " _color_option_trade TEXT," 
	 " giveAwayCar TEXT,"
	 " giveAwayVin TEXT,"
	 " giveAwayDate TEXT,"
	 " getCar TEXT,"
	 " getVin TEXT,"
	 " getDate TEXT);"
	6-QDateTimeEdit  QDateTimeEdit can be configured to allow a QCalendarWidget to be used to select dates. This is enabled by setting the calendarPopup property. 
	  
	  QLabelPresentation
	  
 sqls<<"CREATE TABLE IF NOT EXISTS cars( "
          " _id integer PRIMARY KEY NOT NULL,"
          " _code TEXT NOT NULL, "
          " _name TEXT NOT NULL, "
          " _parentCode TEXT REFERENCES cars(_id) ON UPDATE CASCADE,"
          " _folder integer check( _folder=1 or _folder=0) NOT NULL"
          " ); "
       <<"CREATE UNIQUE INDEX IF NOT EXISTS cars_index ON cars(_code,_name,_parentCode);"
       <<"INSERT OR IGNORE INTO cars(_id,_code,_name,_parentCode,_folder) VALUES "
         "(0,'root','root',0,1);"
      <<"INSERT OR IGNORE INTO cars(_id,_code,_name,_parentCode,_folder) VALUES "
        "(1,'Empty model root','Empty model root',0,0);"
       <<"CREATE TABLE IF NOT EXISTS colors( "
         "   _id integer PRIMARY KEY NOT NULL, "
         "  _code text NOT NULL, "
         " _name text NOT NULL "
         "); "
      <<"CREATE UNIQUE INDEX IF NOT EXISTS color_index ON colors(_code,_name);"
     <<"CREATE TABLE IF NOT EXISTS cars_colors(  "
       " _car integer REFERENCES cars(_id)  ON UPDATE CASCADE NOT NULL,  "
       " _color integer REFERENCES colors(_id)  ON UPDATE CASCADE NOT NULL "
       " ); "
    <<"CREATE UNIQUE INDEX IF NOT EXISTS car_color_index ON cars_colors(_car,_color);"
    <<" CREATE TABLE IF NOT EXISTS dealers( "
      " _code TEXT PRIMARY KEY NOT NULL, "
      " _name TEXT, "
      " _comment TEXT, "
      " _activePhone TEXT, "
      " _distryPhone TEXT "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS full_call( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _comment TEXT, "
      " _source TEXT, "
      " _parent text REFERENCES dealers(_code) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS email( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _mail TEXT, "
      " _comment TEXT, "
      " _parent text REFERENCES dealers(_code) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS managers( "
      " _code TEXT PRIMARY KEY NOT NULL, "
      " _fullName TEXT, "
      " _mark integer CHECK (_mark=0 or _mark=1) DEFAULT 0, "
      " _parent TEXT REFERENCES managers(_code) ON UPDATE CASCADE NOT NULL, "
      " _folder integer check( _folder=1 or _folder=0) NOT NULL DEFAULT 0"
      " ); "
     <<"INSERT OR IGNORE INTO managers(_code,_fullName,_mark,_parent,_folder) VALUES "
       " ('root','root','0','root',1);"
    <<"INSERT OR IGNORE INTO managers(_code,_fullName,_mark,_parent,_folder) VALUES "
      " ('default','default manager','0','root',0);"
    <<" CREATE TABLE IF NOT EXISTS orders( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _manager TEXT REFERENCES managers(_code) ON UPDATE CASCADE NOT NULL, "
      " _client TEXT, "
      " _workList TEXT, "
      " _model integer REFERENCES cars(_id) ON UPDATE CASCADE NOT NULL, "
      " _mark integer CHECK (_mark=0 or _mark=1), "
      " _status text CHECK(_status='' or _status='Search!!!' or _status='Cancel' or _status='Found' or _status='Wait'),"
      " _presentation text "
      " ); "
    <<"INSERT OR IGNORE INTO orders(_id,_manager,_client,_model,_workList) VALUES "
      " (0,'default','default orders',1,'default orders');"
    <<" CREATE TABLE IF NOT EXISTS orders_color( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _color INTEGER REFERENCES colors(_id) ON UPDATE CASCADE NOT NULL, "
      " _parent integer REFERENCES orders(_id) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS orders_option( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _option TEXT NOT NULL,"
      " _parent integer REFERENCES orders(_id) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TABLE IF NOT EXISTS order_timeline( "
      "_id INTEGER PRIMARY KEY NOT NULL, "
      " _date TEXT, "
      " _comment TEXT,"
      " _parent integer REFERENCES orders(_id) ON UPDATE CASCADE NOT NULL "
      " ); "
    <<" CREATE TRIGGER IF NOT EXISTS orders_presentation_inser AFTER INSERT ON orders "
      " BEGIN  "
      "     UPDATE orders SET _presentation=NEW._manager||' for '||NEW._client||' in '||NEW._workList; "
      " END; "
    <<" CREATE TRIGGER IF NOT EXISTS orders_presentation_update AFTER UPDATE ON orders "
      " BEGIN  "
      "     UPDATE orders SET _presentation=NEW._manager||' for '||NEW._client||' in '||NEW._workList; "
      " END; "
    <<" CREATE TABLE IF NOT EXISTS phone( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _orders INTEGER REFERENCES orders(_id ) ON UPDATE CASCADE, "
      " _date TEXT,"
      " _f_status TEXT CHECK(_f_status in ('Search!!!','Cancel','Found','Wait') ) );"
    <<" CREATE TABLE IF NOT EXISTS calls( "
      " _id INTEGER PRIMARY KEY NOT NULL, "
      " _phone INTEGER REFERENCES phone(_id) ON UPDATE CASCADE NOT NULL, "
      " _vinCar TEXT, "
      " _code_dealer TEXT, "
      " _activePhone TEXT, "
      " _blockCar TEXT, "
      " _dateCar TEXT, "
      " _dealerNameAndOpen TEXT, "
      " _dealerLastCall TEXT, "
      " _modelCar TEXT, "
      " _optionCar TEXT, "
      " _colorCar TEXT, "
      " _dateTalk TEXT, "
      " _colorTalk TEXT CHECK(_colorTalk in ('','Красный','Зеленый','Синий','Коричневый','Желтый','Фиолетовый') ), "
      " _commentTalk TEXT "
      " ); "
    ;